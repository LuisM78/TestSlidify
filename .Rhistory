library(ggplot2)
ggplot(dataaggregated,aes(date))+geom_line(color="Red",aes(y=X7))+ylab("temperatures")+
geom_line(color="Blue",aes(y=X8)) + geom_line(color="Green",aes(y=X9))+
geom_line(color="Black",aes(y=X10))
scale_x_datetime(breaks="1 day",labels = date_format("%A %m/%d"))
View(dataaggregated)
temp <- tempfile()
download.file("http://10.105.10.121/20150130.TXT",temp)
data <- read.csv(temp,sep=",",na.string=c("NaN"),header=FALSE,col.names=1:10)
# adding another column for the time
data$datetime<-paste(data$X1,data$X2)
# formatting the time to a specific format
data$datetime<-strptime(as.character(data$datetime),format="%d/%m/%Y %H:%M:%S")
# processing the data for 1 minute
library(openair)
dataaggregated<-timeAverage(data,avg.time="1 min",statistic="mean")
dataaggregated$X7[dataaggregated$X7 == 0 & dataaggregated$X8 == 0]=NA
dataaggregated$X8[dataaggregated$X8 == 0]=NA
library(scales)
library(ggplot2)
ggplot(dataaggregated,aes(date))+geom_line(color="Red",aes(y=X7))+ylab("temperatures")+
geom_line(color="Blue",aes(y=X8)) + geom_line(color="Green",aes(y=X9))+
geom_line(color="Black",aes(y=X10))
scale_x_datetime(breaks="1 day",labels = date_format("%A %m/%d"))
View(dataaggregated)
temp <- tempfile()
download.file("http://10.105.10.121/20150130.TXT",temp)
data <- read.csv(temp,sep=",",na.string=c("NaN"),header=FALSE,col.names=1:10)
# adding another column for the time
data$datetime<-paste(data$X1,data$X2)
# formatting the time to a specific format
data$datetime<-strptime(as.character(data$datetime),format="%d/%m/%Y %H:%M:%S")
# processing the data for 1 minute
library(openair)
dataaggregated<-timeAverage(data,avg.time="1 min",statistic="mean")
dataaggregated$X7[dataaggregated$X7 == 0 & dataaggregated$X8 == 0]=NA
dataaggregated$X8[dataaggregated$X8 == 0]=NA
library(scales)
library(ggplot2)
ggplot(dataaggregated,aes(date))+geom_line(color="Red",aes(y=X7))+ylab("temperatures")+
geom_line(color="Blue",aes(y=X8)) + geom_line(color="Green",aes(y=X9))+
geom_line(color="Black",aes(y=X10))
scale_x_datetime(breaks="1 day",labels = date_format("%A %m/%d"))
temp <- tempfile()
download.file("http://10.105.10.121/20150130.TXT",temp)
data <- read.csv(temp,sep=",",na.string=c("NaN"),header=FALSE,col.names=1:10)
# adding another column for the time
data$datetime<-paste(data$X1,data$X2)
# formatting the time to a specific format
data$datetime<-strptime(as.character(data$datetime),format="%d/%m/%Y %H:%M:%S")
# processing the data for 1 minute
library(openair)
dataaggregated<-timeAverage(data,avg.time="1 min",statistic="mean")
dataaggregated$X7[dataaggregated$X7 == 0 & dataaggregated$X8 == 0]=NA
dataaggregated$X8[dataaggregated$X8 == 0]=NA
library(scales)
library(ggplot2)
ggplot(dataaggregated,aes(date))+geom_line(color="Red",aes(y=X7))+ylab("temperatures")+
geom_line(color="Blue",aes(y=X8)) + geom_line(color="Green",aes(y=X9))+
geom_line(color="Black",aes(y=X10))
scale_x_datetime(breaks="1 day",labels = date_format("%A %m/%d"))
View(dataaggregated)
temp <- tempfile()
download.file("http://10.105.10.121/20150130.TXT",temp)
data <- read.csv(temp,sep=",",na.string=c("NaN"),header=FALSE,col.names=1:10)
# adding another column for the time
data$datetime<-paste(data$X1,data$X2)
# formatting the time to a specific format
data$datetime<-strptime(as.character(data$datetime),format="%d/%m/%Y %H:%M:%S")
# processing the data for 1 minute
library(openair)
dataaggregated<-timeAverage(data,avg.time="1 min",statistic="mean")
dataaggregated$X7[dataaggregated$X7 == 0 & dataaggregated$X8 == 0]=NA
dataaggregated$X8[dataaggregated$X8 == 0]=NA
library(scales)
library(ggplot2)
ggplot(dataaggregated,aes(date))+geom_line(color="Red",aes(y=X7))+ylab("temperatures")+
geom_line(color="Blue",aes(y=X8)) + geom_line(color="Green",aes(y=X9))+
geom_line(color="Black",aes(y=X10))
scale_x_datetime(breaks="1 day",labels = date_format("%A %m/%d"))
View(dataaggregated)
temp <- tempfile()
download.file("http://10.105.10.121/20150130.TXT",temp)
data <- read.csv(temp,sep=",",na.string=c("NaN"),header=FALSE,col.names=1:10)
# adding another column for the time
data$datetime<-paste(data$X1,data$X2)
# formatting the time to a specific format
data$datetime<-strptime(as.character(data$datetime),format="%d/%m/%Y %H:%M:%S")
# processing the data for 1 minute
library(openair)
dataaggregated<-timeAverage(data,avg.time="1 min",statistic="mean")
dataaggregated$X7[dataaggregated$X7 == 0 & dataaggregated$X8 == 0]=NA
dataaggregated$X8[dataaggregated$X8 == 0]=NA
library(scales)
library(ggplot2)
ggplot(dataaggregated,aes(date))+geom_line(color="Red",aes(y=X7))+ylab("temperatures")+
geom_line(color="Blue",aes(y=X8)) + geom_line(color="Green",aes(y=X9))+
geom_line(color="Black",aes(y=X10))
scale_x_datetime(breaks="1 day",labels = date_format("%A %m/%d"))
temp <- tempfile()
download.file("http://10.105.10.121/20150130.TXT",temp)
data <- read.csv(temp,sep=",",na.string=c("NaN"),header=FALSE,col.names=1:10)
# adding another column for the time
data$datetime<-paste(data$X1,data$X2)
# formatting the time to a specific format
data$datetime<-strptime(as.character(data$datetime),format="%d/%m/%Y %H:%M:%S")
# processing the data for 1 minute
library(openair)
dataaggregated<-timeAverage(data,avg.time="1 min",statistic="mean")
dataaggregated$X7[dataaggregated$X7 == 0 & dataaggregated$X8 == 0]=NA
dataaggregated$X8[dataaggregated$X8 == 0]=NA
library(scales)
library(ggplot2)
ggplot(dataaggregated,aes(date))+geom_line(color="Red",aes(y=X7))+ylab("temperatures")+
geom_line(color="Blue",aes(y=X8)) + geom_line(color="Green",aes(y=X9))+
geom_line(color="Black",aes(y=X10))
scale_x_datetime(breaks="1 day",labels = date_format("%A %m/%d"))
# First we acquire de data (donloaded)
# Then we  read the total of columns
# The time column is formatted
# The data is summarized 1 minute
temp <- tempfile()
download.file("http://10.105.10.121/20150130.TXT",temp)
data <- read.csv(temp,sep=",",na.string=c("NaN"),header=FALSE,col.names=1:10)
# adding another column for the time
data$datetime<-paste(data$X1,data$X2)
# formatting the time to a specific format
data$datetime<-strptime(as.character(data$datetime),format="%d/%m/%Y %H:%M:%S")
# processing the data for 1 minute
library(openair)
dataaggregated<-timeAverage(data,avg.time="1 min",statistic="mean")
dataaggregated$X7[dataaggregated$X7 == 0 & dataaggregated$X8 == 0]=NA
dataaggregated$X8[dataaggregated$X8 == 0]=NA
library(scales)
library(ggplot2)
ggplot(dataaggregated,aes(date))+geom_line(color="Red",aes(y=X7))+ylab("temperatures")+
geom_line(color="Blue",aes(y=X8)) + geom_line(color="Green",aes(y=X9))+
geom_line(color="Black",aes(y=X10))
scale_x_datetime(breaks="1 day",labels = date_format("%A %m/%d"))
View(dataaggregated)
# First we acquire de data (donloaded)
# Then we  read the total of columns
# The time column is formatted
# The data is summarized 1 minute
temp <- tempfile()
download.file("http://10.105.10.121/20150130.TXT",temp)
data <- read.csv(temp,sep=",",na.string=c("NaN"),header=FALSE,col.names=1:10)
# adding another column for the time
data$datetime<-paste(data$X1,data$X2)
# formatting the time to a specific format
data$datetime<-strptime(as.character(data$datetime),format="%d/%m/%Y %H:%M:%S")
# processing the data for 1 minute
library(openair)
dataaggregated<-timeAverage(data,avg.time="1 min",statistic="mean")
dataaggregated$X7[dataaggregated$X7 == 0 & dataaggregated$X8 == 0]=NA
dataaggregated$X8[dataaggregated$X8 == 0]=NA
library(scales)
library(ggplot2)
ggplot(dataaggregated,aes(date))+geom_line(color="Red",aes(y=X7))+ylab("temperatures")+
geom_line(color="Blue",aes(y=X8)) + geom_line(color="Green",aes(y=X9))+
geom_line(color="Black",aes(y=X10))
scale_x_datetime(breaks="1 day",labels = date_format("%A %m/%d"))
# First we acquire de data (donloaded)
# Then we  read the total of columns
# The time column is formatted
# The data is summarized 1 minute
temp <- tempfile()
download.file("http://10.105.10.121/20150130.TXT",temp)
data <- read.csv(temp,sep=",",na.string=c("NaN"),header=FALSE,col.names=1:10)
# adding another column for the time
data$datetime<-paste(data$X1,data$X2)
# formatting the time to a specific format
data$datetime<-strptime(as.character(data$datetime),format="%d/%m/%Y %H:%M:%S")
# processing the data for 1 minute
library(openair)
dataaggregated<-timeAverage(data,avg.time="1 min",statistic="mean")
dataaggregated$X7[dataaggregated$X7 == 0 & dataaggregated$X8 == 0]=NA
dataaggregated$X8[dataaggregated$X8 == 0]=NA
library(scales)
library(ggplot2)
ggplot(dataaggregated,aes(date))+geom_line(color="Red",aes(y=X7))+ylab("temperatures")+
geom_line(color="Blue",aes(y=X8)) + geom_line(color="Green",aes(y=X9))+
geom_line(color="Black",aes(y=X10))
scale_x_datetime(breaks="1 day",labels = date_format("%A %m/%d"))
# First we acquire de data (donloaded)
# Then we  read the total of columns
# The time column is formatted
# The data is summarized 1 minute
temp <- tempfile()
download.file("http://10.105.10.121/20150130.TXT",temp)
data <- read.csv(temp,sep=",",na.string=c("NaN"),header=FALSE,col.names=1:10)
# adding another column for the time
data$datetime<-paste(data$X1,data$X2)
# formatting the time to a specific format
data$datetime<-strptime(as.character(data$datetime),format="%d/%m/%Y %H:%M:%S")
# processing the data for 1 minute
library(openair)
dataaggregated<-timeAverage(data,avg.time="1 min",statistic="mean")
dataaggregated$X7[dataaggregated$X7 == 0 & dataaggregated$X8 == 0]=NA
dataaggregated$X8[dataaggregated$X8 == 0]=NA
library(scales)
library(ggplot2)
ggplot(dataaggregated,aes(date))+geom_line(color="Red",aes(y=X7))+ylab("temperatures")+
geom_line(color="Blue",aes(y=X8)) + geom_line(color="Green",aes(y=X9))+
geom_line(color="Black",aes(y=X10))
scale_x_datetime(breaks="1 day",labels = date_format("%A %m/%d"))
View(dataaggregated)
# First we acquire de data (donloaded)
# Then we  read the total of columns
# The time column is formatted
# The data is summarized 1 minute
temp <- tempfile()
download.file("http://10.105.10.121/20150130.TXT",temp)
data <- read.csv(temp,sep=",",na.string=c("NaN"),header=FALSE,col.names=1:10)
# adding another column for the time
data$datetime<-paste(data$X1,data$X2)
# formatting the time to a specific format
data$datetime<-strptime(as.character(data$datetime),format="%d/%m/%Y %H:%M:%S")
# processing the data for 1 minute
library(openair)
dataaggregated<-timeAverage(data,avg.time="1 min",statistic="mean")
dataaggregated$X7[dataaggregated$X7 == 0 & dataaggregated$X8 == 0]=NA
dataaggregated$X8[dataaggregated$X8 == 0]=NA
library(scales)
library(ggplot2)
ggplot(dataaggregated,aes(date))+geom_line(color="Red",aes(y=X7))+ylab("temperatures")+
geom_line(color="Blue",aes(y=X8)) + geom_line(color="Green",aes(y=X9))+
geom_line(color="Black",aes(y=X10))
scale_x_datetime(breaks="1 day",labels = date_format("%A %m/%d"))
View(dataaggregated)
# First we acquire de data (donloaded)
# Then we  read the total of columns
# The time column is formatted
# The data is summarized 1 minute
temp <- tempfile()
download.file("http://10.105.10.121/20150130.TXT",temp)
data <- read.csv(temp,sep=",",na.string=c("NaN"),header=FALSE,col.names=1:10)
# adding another column for the time
data$datetime<-paste(data$X1,data$X2)
# formatting the time to a specific format
data$datetime<-strptime(as.character(data$datetime),format="%d/%m/%Y %H:%M:%S")
# processing the data for 1 minute
library(openair)
dataaggregated<-timeAverage(data,avg.time="1 min",statistic="mean")
dataaggregated$X7[dataaggregated$X7 == 0 & dataaggregated$X8 == 0]=NA
dataaggregated$X8[dataaggregated$X8 == 0]=NA
library(scales)
library(ggplot2)
ggplot(dataaggregated,aes(date))+geom_line(color="Red",aes(y=X7))+ylab("temperatures")+
geom_line(color="Blue",aes(y=X8)) + geom_line(color="Green",aes(y=X9))+
geom_line(color="Black",aes(y=X10))
scale_x_datetime(breaks="1 day",labels = date_format("%A %m/%d"))
temp <- tempfile()
download.file("http://10.105.10.121/20150130.TXT",temp)
data <- read.csv(temp,sep=",",na.string=c("NaN"),header=FALSE,col.names=1:10)
# adding another column for the time
data$datetime<-paste(data$X1,data$X2)
# formatting the time to a specific format
data$datetime<-strptime(as.character(data$datetime),format="%d/%m/%Y %H:%M:%S")
# processing the data for 1 minute
library(openair)
dataaggregated<-timeAverage(data,avg.time="1 min",statistic="mean")
dataaggregated$X7[dataaggregated$X7 == 0 & dataaggregated$X8 == 0]=NA
dataaggregated$X8[dataaggregated$X8 == 0]=NA
library(scales)
library(ggplot2)
ggplot(dataaggregated,aes(date))+geom_line(color="Red",aes(y=X7))+ylab("temperatures")+
geom_line(color="Blue",aes(y=X8)) + geom_line(color="Green",aes(y=X9))+
geom_line(color="Black",aes(y=X10))
scale_x_datetime(breaks="1 day",labels = date_format("%A %m/%d"))
temp <- tempfile()
download.file("http://10.105.10.121/20150130.TXT",temp)
data <- read.csv(temp,sep=",",na.string=c("NaN"),header=FALSE,col.names=1:10)
# adding another column for the time
data$datetime<-paste(data$X1,data$X2)
# formatting the time to a specific format
data$datetime<-strptime(as.character(data$datetime),format="%d/%m/%Y %H:%M:%S")
# processing the data for 1 minute
library(openair)
dataaggregated<-timeAverage(data,avg.time="1 min",statistic="mean")
dataaggregated$X7[dataaggregated$X7 == 0 & dataaggregated$X8 == 0]=NA
dataaggregated$X8[dataaggregated$X8 == 0]=NA
library(scales)
library(ggplot2)
ggplot(dataaggregated,aes(date))+geom_line(color="Red",aes(y=X7))+ylab("temperatures")+
geom_line(color="Blue",aes(y=X8)) + geom_line(color="Green",aes(y=X9))+
geom_line(color="Black",aes(y=X10))
scale_x_datetime(breaks="1 day",labels = date_format("%A %m/%d"))
View(dataaggregated)
tail(dataaggregated)
temp <- tempfile()
download.file("http://10.105.10.121/20150130.TXT",temp)
data <- read.csv(temp,sep=",",na.string=c("NaN"),header=FALSE,col.names=1:10)
# adding another column for the time
data$datetime<-paste(data$X1,data$X2)
# formatting the time to a specific format
data$datetime<-strptime(as.character(data$datetime),format="%d/%m/%Y %H:%M:%S")
# processing the data for 1 minute
library(openair)
dataaggregated<-timeAverage(data,avg.time="1 min",statistic="mean")
dataaggregated$X7[dataaggregated$X7 == 0 & dataaggregated$X8 == 0]=NA
dataaggregated$X8[dataaggregated$X8 == 0]=NA
library(scales)
library(ggplot2)
ggplot(dataaggregated,aes(date))+geom_line(color="Red",aes(y=X7))+ylab("temperatures")+
geom_line(color="Blue",aes(y=X8)) + geom_line(color="Green",aes(y=X9))+
geom_line(color="Black",aes(y=X10))
scale_x_datetime(breaks="1 day",labels = date_format("%A %m/%d"))
tail(dataaggregated)
tail(dataaggregated,20)
temp <- tempfile()
download.file("http://10.105.10.121/20150130.TXT",temp)
data <- read.csv(temp,sep=",",na.string=c("NaN"),header=FALSE,col.names=1:10)
# adding another column for the time
data$datetime<-paste(data$X1,data$X2)
# formatting the time to a specific format
data$datetime<-strptime(as.character(data$datetime),format="%d/%m/%Y %H:%M:%S")
# processing the data for 1 minute
library(openair)
dataaggregated<-timeAverage(data,avg.time="1 min",statistic="mean")
dataaggregated$X7[dataaggregated$X7 == 0 & dataaggregated$X8 == 0]=NA
dataaggregated$X8[dataaggregated$X8 == 0]=NA
library(scales)
library(ggplot2)
ggplot(dataaggregated,aes(date))+geom_line(color="Red",aes(y=X7))+ylab("temperatures")+
geom_line(color="Blue",aes(y=X8)) + geom_line(color="Green",aes(y=X9))+
geom_line(color="Black",aes(y=X10))
scale_x_datetime(breaks="1 day",labels = date_format("%A %m/%d"))
temp <- tempfile()
download.file("http://10.105.10.121/20150130.TXT",temp)
data <- read.csv(temp,sep=",",na.string=c("NaN"),header=FALSE,col.names=1:10)
# adding another column for the time
data$datetime<-paste(data$X1,data$X2)
# formatting the time to a specific format
data$datetime<-strptime(as.character(data$datetime),format="%d/%m/%Y %H:%M:%S")
# processing the data for 1 minute
library(openair)
dataaggregated<-timeAverage(data,avg.time="1 min",statistic="mean")
dataaggregated$X7[dataaggregated$X7 == 0 & dataaggregated$X8 == 0]=NA
dataaggregated$X8[dataaggregated$X8 == 0]=NA
library(scales)
library(ggplot2)
ggplot(dataaggregated,aes(date))+geom_line(color="Red",aes(y=X7))+ylab("temperatures")+
geom_line(color="Blue",aes(y=X8)) + geom_line(color="Green",aes(y=X9))+
geom_line(color="Black",aes(y=X10))
scale_x_datetime(breaks="1 day",labels = date_format("%A %m/%d"))
tail(dataaggregated,30)
temp <- tempfile()
download.file("http://10.105.10.121/20150130.TXT",temp)
data <- read.csv(temp,sep=",",na.string=c("NaN"),header=FALSE,col.names=1:10)
# adding another column for the time
data$datetime<-paste(data$X1,data$X2)
# formatting the time to a specific format
data$datetime<-strptime(as.character(data$datetime),format="%d/%m/%Y %H:%M:%S")
# processing the data for 1 minute
library(openair)
dataaggregated<-timeAverage(data,avg.time="1 min",statistic="mean")
dataaggregated$X7[dataaggregated$X7 == 0 & dataaggregated$X8 == 0]=NA
dataaggregated$X8[dataaggregated$X8 == 0]=NA
library(scales)
library(ggplot2)
ggplot(dataaggregated,aes(date))+geom_line(color="Red",aes(y=X7))+ylab("temperatures")+
geom_line(color="Blue",aes(y=X8)) + geom_line(color="Green",aes(y=X9))+
geom_line(color="Black",aes(y=X10))
scale_x_datetime(breaks="1 day",labels = date_format("%A %m/%d"))
tail(dataaggregated,50)
# First we acquire de data (donloaded)
# Then we  read the total of columns
# The time column is formatted
# The data is summarized 1 minute
temp <- tempfile()
download.file("http://10.105.10.121/20150130.TXT",temp)
data <- read.csv(temp,sep=",",na.string=c("NaN"),header=FALSE,col.names=1:10)
# adding another column for the time
data$datetime<-paste(data$X1,data$X2)
# formatting the time to a specific format
data$datetime<-strptime(as.character(data$datetime),format="%d/%m/%Y %H:%M:%S")
# processing the data for 1 minute
library(openair)
dataaggregated<-timeAverage(data,avg.time="1 min",statistic="mean")
dataaggregated$X7[dataaggregated$X7 == 0 & dataaggregated$X8 == 0]=NA
dataaggregated$X8[dataaggregated$X8 == 0]=NA
library(scales)
library(ggplot2)
ggplot(dataaggregated,aes(date))+geom_line(color="Red",aes(y=X7))+ylab("temperatures")+
geom_line(color="Blue",aes(y=X8)) + geom_line(color="Green",aes(y=X9))+
geom_line(color="Black",aes(y=X10))
scale_x_datetime(breaks="1 day",labels = date_format("%A %m/%d"))
tail(dataaggregated,50)
getwd()
# First we acquire de data (donloaded)
# Then we  read the total of columns
# The time column is formatted
# The data is summarized 1 minute
temp <- tempfile()
download.file("http://10.105.10.121/20150130.TXT",temp)
data <- read.csv(temp,sep=",",na.string=c("NaN"),header=FALSE,col.names=1:10)
# adding another column for the time
data$datetime<-paste(data$X1,data$X2)
# formatting the time to a specific format
data$datetime<-strptime(as.character(data$datetime),format="%d/%m/%Y %H:%M:%S")
# processing the data for 1 minute
library(openair)
dataaggregated<-timeAverage(data,avg.time="1 min",statistic="mean")
dataaggregated$X7[dataaggregated$X7 == 0 & dataaggregated$X8 == 0]=NA
dataaggregated$X8[dataaggregated$X8 == 0]=NA
library(scales)
library(ggplot2)
ggplot(dataaggregated,aes(date))+geom_line(color="Red",aes(y=X7))+ylab("temperatures")+
geom_line(color="Blue",aes(y=X8)) + geom_line(color="Green",aes(y=X9))+
geom_line(color="Black",aes(y=X10))
scale_x_datetime(breaks="1 day",labels = date_format("%A %m/%d"))
tail(dataaggregated,50)
downloadcsv <- function(url, nastrings) {
temp <- tempfile()
download.file(url, temp)
data <- read.csv(temp, na.strings = nastrings)
unlink(temp)
return(data)
}
trainurl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
train <- downloadcsv(trainurl, c("", "NA", "#DIV/0!"))
testurl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
test <- downloadcsv(testurl, c("", "NA", "#DIV/0!"))
dim(train)
table(train$classe)
library(caret)
trainset <- createDataPartition(train$classe, p = 0.8, list = FALSE)
Training <- train[trainset, ]
Validation <- train[-trainset, ]
library(ggplot2)
# Check this website
# https://github.com/genijmath/Practical_machine_learning/blob/master/solution.Rmd
qplot(num_window, user_name, data = Training, color = classe)
nzvcol <- nearZeroVar(Training)
Training <- Training[, -nzvcol]
cntlength <- sapply(Training, function(x) {
sum(!(is.na(x) | x == ""))
})
nullcol <- names(cntlength[cntlength < 0.6 * length(Training$classe)])
descriptcol <- c("X", "user_name", "raw_timestamp_part_1", "raw_timestamp_part_2",
"cvtd_timestamp", "new_window", "num_window")
excludecols <- c(descriptcol, nullcol)
Training <- Training[, !names(Training) %in% excludecols]
library(randomForest)
rfModel <- randomForest(classe ~ ., data = Training, importance = TRUE, ntrees = 10)
ptraining <- predict(rfModel, Training)
print(confusionMatrix(ptraining, Training$classe))
pvalidation <- predict(rfModel, Validation)
print(confusionMatrix(pvalidation, Validation$classe))
ptest <- predict(rfModel, test)
ptest
answers <- as.vector(ptest)
pml_write_files = function(x) {
n = length(x)
for (i in 1:n) {
filename = paste0("problem_id_", i, ".txt")
write.table(x[i], file = filename, quote = FALSE, row.names = FALSE,
col.names = FALSE)
}
}
pml_write_files(answers)
<p>Here is a review of equations used to caculated the Equivalent diameter <b>Knit HTML</b> button a web page will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:</p>
b=2
</p>
setwd("E:/Google Drive/caret_package_webinar")
library(C50)
install.packages("C50")
library(C50)
data(churn)
?churn
??churn
View(churnTest)
names(churnTest)
names(churnTrain)
str(churnTrain)
predictors <- names(churnTrain)[names(churnTrain)!="churn"]
predictors
inTrainingSet <- createDataPartition(allData$churn,p=0.75,list=FALSE)
library(caret)
set.seed(1)
inTrainingSet <- createDataPartition(allData$churn,p=0.75,list=FALSE)
3333/1667
1667/(3333+1667)
numerics <- c("account_length","total_day_calls","total_night_calls")
lls")
procValues <- preProcess(churnTrain[,numerics],
method=c("center","scale","YeoJohnson"))
procValues <- preProcess(churnTrain[,numerics],
method=c("center","scale","YeoJohnson"))
trainScaled <- predict(procValues,churnTrain[,numerics])
testScaled <- predict(procValues,churnTest[,numerics])
trainScaled <- predict(procValues,churnTrain[,numerics])
testScaled <- predict(procValues,churnTest[,numerics])
View(testScaled)
?preProcess
procValues
setwd("E:/Google Drive/Data Specialization JHU/DevelopingDataProducts/Scripts/sample/project/first_deck")
library("devtools", lib.loc="C:/R/Library")
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
publish(user="LuisM78",repo="TestSlidify")
library(slidify)
publish(user="LuisM78",repo="TestSlidify")
publish(user="LuisM78",repo="TestSlidify",host="github")
git
publish(user="LuisM78",repo="TestSlidify",host="github")
publish(user="LuisM78",repo="TestSlidify",host="github")\
publish(user="LuisM78",repo="TestSlidify",host="github")
Sys.which('git')
system('git config --global -list')
Sys.which('git')
